name: Auto Label
on:
  issues:
    types: [opened, reopened]
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      # Adiciona label "triage" a novas issues
      - uses: actions/github-script@v6
        if: github.event_name == 'issues'
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['triage']
            })

      # Adiciona label de escopo com base em diretÃ³rios alterados em PRs
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Label PR com base nos arquivos alterados
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.issue.number;

            // Busca os arquivos modificados no PR
            const response = await github.rest.pulls.listFiles({
              owner,
              repo,
              pull_number: pr_number,
            });

            const files = response.data.map(file => file.filename);
            const labels = new Set();

            // Determina os labels com base nos arquivos alterados
            if (files.some(file => file.startsWith('src/app/') || file.includes('.tsx') || file.includes('.jsx'))) {
              labels.add('scope: frontend');
            }

            if (files.some(file => file.startsWith('src/') || file.includes('main.ts'))) {
              labels.add('scope: backend');
            }

            if (files.some(file => file.includes('.github/') || file.includes('package.json') || file.includes('.eslintrc'))) {
              labels.add('scope: infrastructure');
            }

            if (files.some(file => file.includes('test/') || file.includes('.test.') || file.includes('.spec.'))) {
              labels.add('test');
            }

            if (files.some(file => file.includes('README.md') || file.includes('doc/'))) {
              labels.add('documentation');
            }

            // Adiciona os labels determinados ao PR
            if (labels.size > 0) {
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: pr_number,
                labels: Array.from(labels)
              });
            }
